file(GLOB CPP_FILES RELATIVE ${PROJECT_SOURCE_DIR}/src "*.cpp")
file(GLOB CPP_FILES_2 RELATIVE ${PROJECT_SOURCE_DIR} "*.cpp")

include(ClangFormat)

set(PROJECT_FILES "")
foreach(project_file ${CPP_FILES_2})
  list(APPEND PROJECT_FILES ${project_file})
endforeach()
foreach(project_file ${HPP_FILES})
  list(APPEND PROJECT_FILES ${project_file})
endforeach()

add_format_project_target("${PROJECT_FILES}")

macro (build_kmdiff bname lname maxk)
  add_library(${lname} ${CPP_FILES})
  target_compile_definitions(${lname} PRIVATE DEF_MAX_KMER=${maxk} DEF_MAX_COUNT=${MAX_C})
if (WITH_POPSTRAT)
  target_compile_definitions(${lname} PRIVATE WITH_POPSTRAT)
  add_dependencies(${lname} ${DEPS})
endif()
  add_executable(${bname} main.cpp)
  target_compile_definitions(${bname} PRIVATE DEF_MAX_KMER=${maxk} DEF_MAX_COUNT=${MAX_C})
if (WITH_POPSTRAT)
  target_compile_definitions(${lname} PRIVATE WITH_POPSTRAT)
  add_dependencies(${lname} ${DEPS})
endif()
  add_dependencies(${bname} ${DEPS})
  target_include_directories(${bname} PUBLIC ${INCLUDES})
  target_link_libraries(${bname} ${lname})
endmacro()

if (MAX_K STREQUAL ALL)
  build_kmdiff(${PROJECT_NAME} kmdifflib 32)
  build_kmdiff(${PROJECT_NAME}64 kmdifflib64 64)
else()
  build_kmdiff(${PROJECT_NAME} kmdifflib ${MAX_K})
endif()

if (NOT APPLE)
  target_link_options(${PROJECT_NAME} PUBLIC -export-dynamic)
endif()
if (STATIC_BUILD)
  target_link_options(${PROJECT_NAME} PUBLIC -static)
endif()