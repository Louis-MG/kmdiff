name: kmdiff

on:
  push:
    paths-ignore:
      - 'README.md'
      - 'docker/**'
      - 'conda/**'
      - 'scripts/**'
      - '.gitignore'
  pull_request:
      paths-ignore:
      - 'README.md'
      - 'docker/**'
      - 'conda/**'
      - 'scripts/**'
      - '.gitignore'

jobs:
  Linux:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        build_type: [Release, Debug]
        compiler: [g++-8, g++-9, g++-10]
        include:
          - compiler: g++-8
            cxx: g++-8
            cc: gcc-8
          - compiler: g++-9
            cxx: g++-9
            cc: gcc-9
          - compiler: g++-10
            cxx: g++-10
            cc: gcc-10

    name: Linux - ${{ matrix.build_type }} - ${{ matrix.compiler }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Dependencies
        run: |
          sudo apt-get install ${{ matrix.compiler }}
          sudo apt-get install libgsl-dev libopenblas-dev liblapack-dev liblapacke-dev libbz2-dev zlib1g zlib1g-dev

      - name: Configure
        shell: bash
        run: |
          mkdir build
          cd build
          export CC=$(which ${{ matrix.cc }})
          export CXX=$(which ${{ matrix.cxx }})
          cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCOMPILE_TESTS=OFF -DWITH_POPSTRAT=OFF

      - name: Build
        shell: bash
        run: |
          cd build
          export CC=$(which ${{ matrix.cc }})
          export CXX=$(which ${{ matrix.cxx }})
          make -j2

  MacOS:
    runs-on: macos-10.15
    strategy:
      fail-fast: false
      matrix:
        build_type: [Release, Debug]

    name: MacOS - ${{ matrix.build_type }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Dependencies
        run: brew install gsl lapack openblas bzip2 zlib

      - name: Configure
        shell: bash
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCOMPILE_TESTS=OFF -DWITH_POPSTRAT=OFF

      - name: Build
        shell: bash
        run: cd build && make -j2

